apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9901

    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /tmp/access.log
              http_filters:
              # External Authorization filter (before JWT filter)
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ext_authz_service
                    timeout: 0.5s
                  # Forward the JWT token to the ext_authz service
                  # This ensures the token is accessible in the authz service
                  with_request_body:
                    max_request_bytes: 8192
                    allow_partial_message: true
                  failure_mode_allow: false
                  # Forward all headers to external auth service, including the Authorization header with JWT
                  include_peer_certificate: true
              
              # JWT Authentication filter (after ext_authz)
              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    keycloak:
                      issuer: "http://localhost:8080/realms/mcp-realm"
                      audiences: ["account"]
                      remote_jwks:
                        http_uri:
                          uri: "http://host.docker.internal:8080/realms/mcp-realm/protocol/openid-connect/certs"
                          cluster: keycloak_jwks
                          timeout: 5s
                        cache_duration:
                          seconds: 300
                      forward: true
                  rules:
                  - match:
                      prefix: "/"
                    requires:
                      provider_name: keycloak
              
              # Router filter must be the last filter
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      host_rewrite_literal: httpbin.org
                      cluster: httpbin_service
                      timeout: 30s

      clusters:
      - name: httpbin_service
        connect_timeout: 5s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: httpbin_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: httpbin.org
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
      
      # Keycloak JWKS cluster
      - name: keycloak_jwks
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: keycloak_jwks
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: host.docker.internal
                    port_value: 8080
      
      # External Authorization service cluster
      - name: ext_authz_service
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}  # Enable HTTP/2 for gRPC
        load_assignment:
          cluster_name: ext_authz_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ext-authz.kgateway-system.svc.cluster.local
                    port_value: 4444
